### Chat client thingy


## SERVER API

[token, user] login(email, password)
token register(email, password, name)

room.id[] getRooms()

bool sendMessage(room, message)
message.id[] getMessages(room, <queryoptions>)

room createRoom()
bool removeRoom()

room.id useInvite(invite)
bool leaveRoom()

invite createInvite(room.id)

user getUser(user.id)
room getRoom(room.id)

## CLIENT API

void messageEvent(room, user, message)
void roomChange(room)


### Stuff

Requests are made thru websockets in json-format.
{
	method: "login",
	request: [email, password]
	id: "-"
}
After request has been processed, response will be sent. 
ID is used by requester to keep track of these async methods.
{
	method: "response",
	response: [null, true],
	id: "-",
}
First argument in response is error. Send null if no error.

## types

token 

message {
	id,	
	content,
	author: user.id
}

user {
	id,
	name
}

room {
	id,
	name,
	users[],
	owner
}